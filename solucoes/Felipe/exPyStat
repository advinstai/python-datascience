#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Wed Nov  6 11:41:27 2019

@author: felipe


https://raw.githubusercontent.com/advinstai/python-datascience/master/csv/College.csv 
descubra as colunas qualitativas e quantitativas 
Descreva os intervalos das colunas quantitativas 
calcule a media, mediana e moda de cada coluna quantitativa 

"""
from __future__ import division

import pandas as pd
import numpy as np
import pylab as plot

import math



dadosD = pd.read_csv("College.csv")

quais = dadosD.loc[0].apply(type)

#dados quantitativos (computacionalmente)

quantum = list(quais.index[(quais == np.int64) | (quais == np.float64)])

print "\033[1;31;46m colunas quantitativas:\033[0m \n", quantum

print "\033[1;31;46m colunas qualitativas:\033[0m \n", list(quais.index[quais == str])

medias = dadosD.mean()

varianca = dadosD.var()

intervalos=pd.DataFrame()

moda = map(lambda x: dadosD[x].mode().loc[0], quantum)

intervalos['max'] = dadosD.max()
intervalos['min'] = dadosD.min()
intervalos['media'] = medias
intervalos['varianca'] = varianca
intervalos['moda'] = pd.Series(moda, index=quantum)


#geralmente eu nao printo nada, uso o explorador de vari√°veis logo apos executar o script
print intervalos

#plot.hist(dadosD["Grad.Rate"]); plot.grid(); plot.title("Grad.Rate")

plot.figure(0)

p1 = plot.barh(quantum,intervalos['min'].to_numpy()[2::]);
p2 = plot.barh(quantum,intervalos['max'].to_numpy()[2::], left=intervalos['min'].to_numpy()[2::]);

plot.grid()

plot.legend((p1[0], p2[0]), ('Min', 'Min')); plot.title("intervalos")

plot.figure(1)

plot.hist(dadosD['Grad.Rate'].to_numpy(), density=True); plot.grid()

sigma = math.sqrt(varianca['Grad.Rate'])
mediau = medias['Grad.Rate']

def PDF(x,u=0):
    global sigma
    global mediau
    
    u = mediau
    
    return (1.0/(sigma*math.sqrt(2*math.pi)))*math.exp(-0.5*((x-u)/sigma)**2)

xx = np.arange(0,120,0.5)

plot.plot(xx,map(PDF, xx)); 


plot.title("media="+"{0:2.2f}".format(mediau))

plot.figure(2)

plot.hist(dadosD['Grad.Rate'].to_numpy(), density=True, cumulative=True)
plot.grid(); plot.title("CDF")



# %%

plot.figure(4)

train = pd.read_csv("train.csv")

males = train.Sex.value_counts()['male']

femele = train.Sex.value_counts()['female']

plot.barh(['homens', 'mulheres'], [males, femele]); plot.grid()

plot.figure(5)

